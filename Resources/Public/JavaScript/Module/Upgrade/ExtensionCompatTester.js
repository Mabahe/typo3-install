/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
var __awaiter=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,i){function a(e){try{l(o.next(e))}catch(e){i(e)}}function r(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,r)}l((o=o.apply(e,t||[])).next())}))};define(["require","exports","jquery","../AbstractInteractableModule","TYPO3/CMS/Backend/Modal","TYPO3/CMS/Backend/Notification","TYPO3/CMS/Core/Ajax/AjaxRequest","../../Renderable/InfoBox","../../Renderable/ProgressBar","../../Renderable/Severity","../../Router","bootstrap"],(function(e,t,n,o,s,i,a,r,l,d,c){"use strict";class h extends o.AbstractInteractableModule{constructor(){super(...arguments),this.selectorCheckTrigger=".t3js-extensionCompatTester-check",this.selectorUninstallTrigger=".t3js-extensionCompatTester-uninstall",this.selectorOutputContainer=".t3js-extensionCompatTester-output"}initialize(e){this.currentModal=e,this.getLoadedExtensionList(),e.on("click",this.selectorCheckTrigger,()=>{this.findInModal(this.selectorUninstallTrigger).addClass("hidden"),this.findInModal(this.selectorOutputContainer).empty(),this.getLoadedExtensionList()}),e.on("click",this.selectorUninstallTrigger,e=>{this.uninstallExtension(n(e.target).data("extension"))})}getLoadedExtensionList(){this.findInModal(this.selectorCheckTrigger).addClass("disabled").prop("disabled",!0),this.findInModal(".modal-loading").hide();const e=this.getModalBody(),t=this.findInModal(this.selectorOutputContainer),n=l.render(d.loading,"Loading...","");t.append(n),new a(c.getUrl("extensionCompatTesterLoadedExtensionList")).get({cache:"no-cache"}).then(t=>__awaiter(this,void 0,void 0,(function*(){const n=yield t.resolve();e.empty().append(n.html),s.setButtons(n.buttons);const o=this.findInModal(this.selectorOutputContainer),a=l.render(d.loading,"Loading...","");o.append(a),!0===n.success?this.loadExtLocalconf().then(()=>{o.append(r.render(d.ok,"ext_localconf.php of all loaded extensions successfully loaded","")),this.loadExtTables().then(()=>{o.append(r.render(d.ok,"ext_tables.php of all loaded extensions successfully loaded",""))},e=>__awaiter(this,void 0,void 0,(function*(){this.renderFailureMessages("ext_tables.php",(yield e.response.json()).brokenExtensions,o)}))).finally(()=>{this.unlockModal()})},e=>__awaiter(this,void 0,void 0,(function*(){this.renderFailureMessages("ext_localconf.php",(yield e.response.json()).brokenExtensions,o),o.append(r.render(d.notice,"Skipped scanning ext_tables.php files due to previous errors","")),this.unlockModal()}))):i.error("Something went wrong")})),t=>{c.handleAjaxError(t,e)})}unlockModal(){this.findInModal(this.selectorOutputContainer).find(".alert-loading").remove(),this.findInModal(this.selectorCheckTrigger).removeClass("disabled").prop("disabled",!1)}renderFailureMessages(e,t,o){for(let s of t){let t;s.isProtected||(t=n("<button />",{class:"btn btn-danger t3js-extensionCompatTester-uninstall"}).attr("data-extension",s.name).text('Uninstall extension "'+s.name+'"')),o.append(r.render(d.error,"Loading "+e+' of extension "'+s.name+'" failed',s.isProtected?"Extension is mandatory and cannot be uninstalled.":""),t)}this.unlockModal()}loadExtLocalconf(){const e=this.getModuleContent().data("extension-compat-tester-load-ext_localconf-token");return new a(c.getUrl()).post({install:{action:"extensionCompatTesterLoadExtLocalconf",token:e}})}loadExtTables(){const e=this.getModuleContent().data("extension-compat-tester-load-ext_tables-token");return new a(c.getUrl()).post({install:{action:"extensionCompatTesterLoadExtTables",token:e}})}uninstallExtension(e){const t=this.getModuleContent().data("extension-compat-tester-uninstall-extension-token"),o=this.getModalBody(),s=n(this.selectorOutputContainer),h=l.render(d.loading,"Loading...","");s.append(h),new a(c.getUrl()).post({install:{action:"extensionCompatTesterUninstallExtension",token:t,extension:e}}).then(e=>__awaiter(this,void 0,void 0,(function*(){const t=yield e.resolve();t.success?(Array.isArray(t.status)&&t.status.forEach(e=>{const t=r.render(e.severity,e.title,e.message);o.find(this.selectorOutputContainer).empty().append(t)}),this.findInModal(this.selectorUninstallTrigger).addClass("hidden"),this.getLoadedExtensionList()):i.error("Something went wrong")})),e=>{c.handleAjaxError(e,o)})}}return new h}));