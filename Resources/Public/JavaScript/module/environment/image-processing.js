/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import"bootstrap";import{AbstractInteractableModule}from"@typo3/install/module/abstract-interactable-module.js";import Modal from"@typo3/backend/modal.js";import Notification from"@typo3/backend/notification.js";import AjaxRequest from"@typo3/core/ajax/ajax-request.js";import{InfoBox}from"@typo3/install/renderable/info-box.js";import Severity from"@typo3/install/renderable/severity.js";import Router from"@typo3/install/router.js";import RegularEvent from"@typo3/core/event/regular-event.js";class ImageProcessing extends AbstractInteractableModule{constructor(){super(...arguments),this.selectorExecuteTrigger=".t3js-imageProcessing-execute",this.selectorTestContainer=".t3js-imageProcessing-twinContainer",this.selectorTwinImageTemplate=".t3js-imageProcessing-twinImage-template",this.selectorCommandContainer=".t3js-imageProcessing-command",this.selectorCommandText=".t3js-imageProcessing-command-text",this.selectorTwinImages=".t3js-imageProcessing-images"}initialize(e){this.currentModal=e,this.getData(),new RegularEvent("click",(e=>{e.preventDefault(),this.runTests()})).delegateTo(e.get(0),this.selectorExecuteTrigger)}getData(){const e=this.getModalBody().get(0);new AjaxRequest(Router.getUrl("imageProcessingGetData")).get({cache:"no-cache"}).then((async t=>{const s=await t.resolve();!0===s.success?(e.innerHTML=s.html,Modal.setButtons(s.buttons),this.runTests()):Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(t=>{Router.handleAjaxError(t,e)}))}runTests(){const e=this.getModalBody().get(0);this.setModalButtonsState(!1);const t=this.findInModal(this.selectorTwinImageTemplate).get(0),s=[];e.querySelectorAll(this.selectorTestContainer).forEach(((r,o)=>{r.innerHTML="",r.append(InfoBox.create(Severity.loading,"Loading..."));const n=new AjaxRequest(Router.getUrl(r.dataset.test)).get({cache:"no-cache"}).then((async e=>{const s=await e.resolve();if(!0===s.success){r.innerHTML="",Array.isArray(s.status)&&s.status.forEach((e=>{r.append(InfoBox.create(e.severity,e.title,e.message))}));const e=t.cloneNode(!0);if(e.classList.remove("t3js-imageProcessing-twinImage-template"),!0===s.fileExists&&(e.querySelector("img.reference")?.setAttribute("src",s.referenceFile),e.querySelector("img.result")?.setAttribute("src",s.outputFile),e.querySelectorAll(this.selectorTwinImages).forEach((e=>e.hidden=!1))),Array.isArray(s.command)&&s.command.length>0){const t=e.querySelector(this.selectorCommandContainer);null!==t&&(t.hidden=!1);const r=[];s.command.forEach((e=>{r.push("<strong>Command:</strong>\n"+e[1]),3===e.length&&r.push("<strong>Result:</strong>\n"+e[2])}));const o=e.querySelector(this.selectorCommandText);null!==o&&(o.innerHTML=r.join("\n"))}r.append(e)}}),(t=>{Router.handleAjaxError(t,e)}));s.push(n)})),Promise.all(s).then((()=>{const e=this.findInModal(this.selectorExecuteTrigger).get(0);null!==e&&(e.classList.remove("disabled"),e.removeAttribute("disabled"))}))}}export default new ImageProcessing;