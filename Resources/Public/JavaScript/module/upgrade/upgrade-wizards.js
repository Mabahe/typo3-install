/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import"bootstrap";import{AbstractInteractableModule}from"@typo3/install/module/abstract-interactable-module.js";import Notification from"@typo3/backend/notification.js";import AjaxRequest from"@typo3/core/ajax/ajax-request.js";import SecurityUtility from"@typo3/core/security-utility.js";import{FlashMessage}from"@typo3/install/renderable/flash-message.js";import{InfoBox}from"@typo3/install/renderable/info-box.js";import Severity from"@typo3/install/renderable/severity.js";import Router from"@typo3/install/router.js";import RegularEvent from"@typo3/core/event/regular-event.js";class UpgradeWizards extends AbstractInteractableModule{constructor(){super(),this.selectorOutputWizardsContainer=".t3js-upgradeWizards-wizards-output",this.selectorOutputDoneContainer=".t3js-upgradeWizards-done-output",this.selectorWizardsBlockingAddsTemplate=".t3js-upgradeWizards-blocking-adds-template",this.selectorWizardsBlockingAddsRows=".t3js-upgradeWizards-blocking-adds-rows",this.selectorWizardsBlockingAddsExecute=".t3js-upgradeWizards-blocking-adds-execute",this.selectorWizardsBlockingCharsetTemplate=".t3js-upgradeWizards-blocking-charset-template",this.selectorWizardsBlockingCharsetFix=".t3js-upgradeWizards-blocking-charset-fix",this.selectorWizardsDoneBodyTemplate=".t3js-upgradeWizards-done-body-template",this.selectorWizardsDoneRows=".t3js-upgradeWizards-done-rows",this.selectorWizardsDoneRowTemplate=".t3js-upgradeWizards-done-row-template table tr",this.selectorWizardsDoneRowMarkUndone=".t3js-upgradeWizards-done-markUndone",this.selectorWizardsDoneRowTitle=".t3js-upgradeWizards-done-title",this.selectorWizardsListTemplate=".t3js-upgradeWizards-list-template",this.selectorWizardsListRows=".t3js-upgradeWizards-list-rows",this.selectorWizardsListRowTemplate=".t3js-upgradeWizards-list-row-template",this.selectorWizardsListRowTitle=".t3js-upgradeWizards-list-row-title",this.selectorWizardsListRowExplanation=".t3js-upgradeWizards-list-row-explanation",this.selectorWizardsListRowExecute=".t3js-upgradeWizards-list-row-execute",this.selectorWizardsInputTemplate=".t3js-upgradeWizards-input",this.selectorWizardsInputTitle=".t3js-upgradeWizards-input-title",this.selectorWizardsInputDescription=".t3js-upgradeWizards-input-description",this.selectorWizardsInputHtml=".t3js-upgradeWizards-input-html",this.selectorWizardsInputPerform=".t3js-upgradeWizards-input-perform",this.selectorWizardsInputAbort=".t3js-upgradeWizards-input-abort",this.securityUtility=new SecurityUtility}static removeLoadingMessage(e){e.querySelector("typo3-install-progress-bar").remove()}initialize(e){super.initialize(e),this.getData().then((()=>{this.doneUpgrades()})),new RegularEvent("click",((e,t)=>{this.markUndone(t.dataset.identifier)})).delegateTo(e,this.selectorWizardsDoneRowMarkUndone),new RegularEvent("click",(()=>{this.blockingUpgradesDatabaseCharsetFix()})).delegateTo(e,this.selectorWizardsBlockingCharsetFix),new RegularEvent("click",(()=>{this.blockingUpgradesDatabaseAddsExecute()})).delegateTo(e,this.selectorWizardsBlockingAddsExecute),new RegularEvent("click",((e,t)=>{this.wizardInput(t.dataset.identifier,t.dataset.title)})).delegateTo(e,this.selectorWizardsListRowExecute),new RegularEvent("click",((e,t)=>{this.wizardExecute(t.dataset.identifier,t.dataset.title)})).delegateTo(e,this.selectorWizardsInputPerform),new RegularEvent("click",(()=>{this.findInModal(this.selectorOutputWizardsContainer).innerHTML="",this.wizardsList()})).delegateTo(e,this.selectorWizardsInputAbort)}getData(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);return new AjaxRequest(Router.getUrl("upgradeWizardsGetData")).get({cache:"no-cache"}).then((async t=>{const s=await t.resolve();!0===s.success?(e.innerHTML=s.html,this.blockingUpgradesDatabaseCharsetTest()):Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(e=>{Router.handleAjaxError(e,t)}))}blockingUpgradesDatabaseCharsetTest(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(t,{label:"Checking database charset..."}),new AjaxRequest(Router.getUrl("upgradeWizardsBlockingDatabaseCharsetTest")).get({cache:"no-cache"}).then((async s=>{const r=await s.resolve();UpgradeWizards.removeLoadingMessage(t),!0===r.success&&(!0===r.needsUpdate?e.querySelector(this.selectorOutputWizardsContainer).appendChild(e.querySelector(this.selectorWizardsBlockingCharsetTemplate)).cloneNode(!0):this.blockingUpgradesDatabaseAdds())}),(e=>{Router.handleAjaxError(e,t)}))}blockingUpgradesDatabaseCharsetFix(){const e=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(e,{label:"Setting database charset to UTF-8..."}),new AjaxRequest(Router.getUrl("upgradeWizardsBlockingDatabaseCharsetFix")).get({cache:"no-cache"}).then((async t=>{const s=await t.resolve();UpgradeWizards.removeLoadingMessage(e),!0===s.success?Array.isArray(s.status)&&s.status.length>0&&s.status.forEach((t=>{e.append(InfoBox.create(t.severity,t.title,t.message))})):(UpgradeWizards.removeLoadingMessage(e),e.append(FlashMessage.create(Severity.error,"Something went wrong")))}),(t=>{Router.handleAjaxError(t,e)}))}blockingUpgradesDatabaseAdds(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(t,{label:"Check for missing mandatory database tables and fields..."}),new AjaxRequest(Router.getUrl("upgradeWizardsBlockingDatabaseAdds")).get({cache:"no-cache"}).then((async s=>{const r=await s.resolve();if(UpgradeWizards.removeLoadingMessage(t),!0===r.success)if(!0===r.needsUpdate){const t=e.querySelector(this.selectorWizardsBlockingAddsTemplate).cloneNode(!0);"object"==typeof r.adds.tables&&r.adds.tables.forEach((e=>{const s="Table: "+this.securityUtility.encodeHtml(e.table);t.querySelector(this.selectorWizardsBlockingAddsRows).append(s,"<br>")})),"object"==typeof r.adds.columns&&r.adds.columns.forEach((e=>{const s="Table: "+this.securityUtility.encodeHtml(e.table)+", Field: "+this.securityUtility.encodeHtml(e.field);t.querySelector(this.selectorWizardsBlockingAddsRows).append(s,"<br>")})),"object"==typeof r.adds.indexes&&r.adds.indexes.forEach((e=>{const s="Table: "+this.securityUtility.encodeHtml(e.table)+", Index: "+this.securityUtility.encodeHtml(e.index);t.querySelector(this.selectorWizardsBlockingAddsRows).append(s,"<br>")})),e.querySelector(this.selectorOutputWizardsContainer).appendChild(t)}else this.wizardsList();else Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(e=>{Router.handleAjaxError(e,t)}))}blockingUpgradesDatabaseAddsExecute(){const e=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(e,{label:"Adding database tables and fields..."}),new AjaxRequest(Router.getUrl("upgradeWizardsBlockingDatabaseExecute")).get({cache:"no-cache"}).then((async t=>{const s=await t.resolve();if(UpgradeWizards.removeLoadingMessage(e),Array.isArray(s.status)&&s.status.length>0&&s.status.forEach((t=>{e.append(InfoBox.create(t.severity,t.title,t.message))})),!0===s.success)this.wizardsList();else if(Array.isArray(s.status)&&0!==s.status.length){const t=document.createElement("div");t.classList.add("btn-toolbar","mt-3","mb-4");const s=document.createElement("button");s.classList.add("btn","btn-default"),s.innerText="Retry database migration";const r=document.createElement("button");r.classList.add("btn","btn-danger"),r.innerText="Proceed despite of errors",new RegularEvent("click",(()=>{this.blockingUpgradesDatabaseAddsExecute()})).bindTo(s),new RegularEvent("click",(()=>{t.remove(),this.wizardsList()})).bindTo(r),t.appendChild(s),t.appendChild(r),e.appendChild(t)}else e.append(FlashMessage.create(Severity.error,"Something went wrong"))}),(t=>{Router.handleAjaxError(t,e)}))}wizardsList(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(t,{label:"Loading upgrade wizards..."}),new AjaxRequest(Router.getUrl("upgradeWizardsList")).get({cache:"no-cache"}).then((async s=>{const r=await s.resolve();UpgradeWizards.removeLoadingMessage(t);const a=e.querySelector(this.selectorWizardsListTemplate).cloneNode(!0);if(a.classList.remove("t3js-upgradeWizards-list-template"),!0===r.success){let t=0,s=0;Array.isArray(r.wizards)&&r.wizards.length>0&&(s=r.wizards.length,r.wizards.forEach((s=>{if(!0===s.shouldRenderWizard){const r=e.querySelector(this.selectorWizardsListRowTemplate).cloneNode(!0);t+=1,r.classList.remove("t3js-upgradeWizards-list-row-template"),r.querySelector(this.selectorWizardsListRowTitle).innerText=s.title,r.querySelector(this.selectorWizardsListRowExplanation).innerText=s.explanation,r.querySelector(this.selectorWizardsListRowExecute).setAttribute("data-identifier",s.identifier),r.querySelector(this.selectorWizardsListRowExecute).setAttribute("data-title",s.title),a.querySelector(this.selectorWizardsListRows).append(r)}})));let i=100;const o=a.querySelector(".progress-bar");t>0?i=Math.round((s-t)/r.wizards.length*100):(o.classList.remove("progress-bar-info"),o.classList.add("progress-bar-success")),o.classList.remove("progress-bar-striped"),o.style.width=i+"%",o.setAttribute("aria-valuenow",String(i)),o.querySelector("span").innerText=i+"%",e.querySelector(this.selectorOutputWizardsContainer).appendChild(a),this.findInModal(this.selectorWizardsDoneRowMarkUndone).disabled=!1}else Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(e=>{Router.handleAjaxError(e,t)}))}wizardInput(e,t){const s=this.getModuleContent().dataset.upgradeWizardsInputToken,r=this.getModalBody(),a=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(a,{label:'Loading "'+t+'"...'}),r.animate({scrollTop:r.scrollTop-Math.abs(r.querySelector(".t3js-upgrade-status-section").getBoundingClientRect().top)},250),new AjaxRequest(Router.getUrl("upgradeWizardsInput")).post({install:{action:"upgradeWizardsInput",token:s,identifier:e}}).then((async e=>{const t=await e.resolve();a.innerHTML="";const s=r.querySelector(this.selectorWizardsInputTemplate).cloneNode(!0);if(s.classList.remove("t3js-upgradeWizards-input"),!0===t.success){Array.isArray(t.status)&&t.status.forEach((e=>{a.append(FlashMessage.create(e.severity,e.title,e.message))})),t.userInput.wizardHtml.length>0&&(s.querySelector(this.selectorWizardsInputHtml).innerHTML=t.userInput.wizardHtml),s.querySelector(this.selectorWizardsInputTitle).innerText=t.userInput.title,s.querySelector(this.selectorWizardsInputDescription).innerHTML=this.securityUtility.stripHtml(t.userInput.description).replace(/\n/g,"<br>");const e=s.querySelector(this.selectorWizardsInputPerform);e.setAttribute("data-identifier",t.userInput.identifier),e.setAttribute("data-title",t.userInput.title)}r.querySelector(this.selectorOutputWizardsContainer).appendChild(s)}),(e=>{Router.handleAjaxError(e,a)}))}wizardExecute(e,t){const s=this.getModuleContent().dataset.upgradeWizardsExecuteToken,r=this.getModalBody(),a={"install[action]":"upgradeWizardsExecute","install[token]":s,"install[identifier]":e},i=new FormData(this.findInModal(this.selectorOutputWizardsContainer+" form"));for(const[e,t]of i)a[e]=t.toString();const o=this.findInModal(this.selectorOutputWizardsContainer);this.renderProgressBar(o,{label:'Executing "'+t+'"...'}),this.findInModal(this.selectorWizardsDoneRowMarkUndone).disabled=!0,new AjaxRequest(Router.getUrl()).post(a).then((async e=>{const t=await e.resolve();o.innerHTML="",!0===t.success?(Array.isArray(t.status)&&t.status.forEach((e=>{o.append(InfoBox.create(e.severity,e.title,e.message))})),this.wizardsList(),r.querySelector(this.selectorOutputDoneContainer).innerHTML="",this.doneUpgrades()):Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(e=>{Router.handleAjaxError(e,o)}))}doneUpgrades(){const e=this.getModalBody(),t=e.querySelector(this.selectorOutputDoneContainer);this.renderProgressBar(t,{label:"Loading executed upgrade wizards..."}),new AjaxRequest(Router.getUrl("upgradeWizardsDoneUpgrades")).get({cache:"no-cache"}).then((async s=>{const r=await s.resolve();if(UpgradeWizards.removeLoadingMessage(t),!0===r.success){Array.isArray(r.status)&&r.status.length>0&&r.status.forEach((e=>{t.append(InfoBox.create(e.severity,e.title,e.message))}));const s=e.querySelector(this.selectorWizardsDoneBodyTemplate).cloneNode(!0),a=s.querySelector(this.selectorWizardsDoneRows);let i=!1;Array.isArray(r.wizardsDone)&&r.wizardsDone.length>0&&r.wizardsDone.forEach((t=>{i=!0;const s=e.querySelector(this.selectorWizardsDoneRowTemplate).cloneNode(!0);s.querySelector(this.selectorWizardsDoneRowMarkUndone).setAttribute("data-identifier",t.identifier),s.querySelector(this.selectorWizardsDoneRowTitle).innerText=t.title,a.appendChild(s)})),Array.isArray(r.rowUpdatersDone)&&r.rowUpdatersDone.length>0&&r.rowUpdatersDone.forEach((t=>{i=!0;const s=e.querySelector(this.selectorWizardsDoneRowTemplate).cloneNode(!0);s.querySelector(this.selectorWizardsDoneRowMarkUndone).setAttribute("data-identifier",t.identifier),s.querySelector(this.selectorWizardsDoneRowTitle).innerText=t.title,a.appendChild(s)})),i&&(e.querySelector(this.selectorOutputDoneContainer).appendChild(s),this.findInModal(this.selectorWizardsDoneRowMarkUndone).disabled=!0)}else Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(e=>{Router.handleAjaxError(e,t)}))}markUndone(e){const t=this.getModuleContent().dataset.upgradeWizardsMarkUndoneToken,s=this.getModalBody(),r=this.findInModal(this.selectorOutputDoneContainer);this.renderProgressBar(r,{label:"Marking upgrade wizard as undone..."}),new AjaxRequest(Router.getUrl()).post({install:{action:"upgradeWizardsMarkUndone",token:t,identifier:e}}).then((async e=>{const t=await e.resolve();r.innerHTML="",s.querySelector(this.selectorOutputDoneContainer).innerHTML="",!0===t.success&&Array.isArray(t.status)?t.status.forEach((e=>{Notification.success(e.title,e.message),this.doneUpgrades(),this.blockingUpgradesDatabaseCharsetTest()})):Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(e=>{Router.handleAjaxError(e,r)}))}}export default new UpgradeWizards;